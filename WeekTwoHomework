public with sharing class WeekTwoHomework {
 

    //========================================================================================================
    //Excercise A
    //A method that includes a query for a List of contacts and returns the Account Name and Industry as well.  
    //Use a loop to print the name of each Contact’s Account Name with System.debug.
    //========================================================================================================
    
    public static list<Account> getContactAccounts(){

        //List<Contact> lsCon = [SELECT Id, Account.Name, Account.Industry FROM Contact];
        List<Account> acc = new List<Account>();

        for(Contact c : [SELECT Id, Account.Name, Account.Industry FROM Contact]) 
        {
            Account a = new Account();
            a.Name = c.Account.Name;
            a.Industry = c.Account.Industry;
            acc.add(a);
            System.debug('Contacts Account Name:' +c.Account.Name);
            
        }
        return acc;
    }

    //===================================================================================================================    
    //Excercise B
    //A method that includes a query for a list of Accounts AND includes all their closed-won opportunities in a subquery. 
    //Use a loop to print out the name of each Account’s opportunity with System.debug.
    //====================================================================================================================

    public static void getAccounts()
    {

        List<Account> acc = [SELECT Id, (SELECT Id, Name FROM Opportunities WHERE StageName = 'Closed Won') FROM Account];
    
            for(Account a : acc){
            
                for(Opportunity opp : a.Opportunities){
            
                    system.debug('Accounts Opportunity Name:' +opp.name);

                }

            }

    }

    //===================================================================================================================    
    //Excercise c
    //A method that queries for Opportunity records that returns results in a map format. 
    //====================================================================================================================
    
    public static Map<Id,Opportunity> getOppsInMap(){

        Map<Id,Opportunity> opp = new Map<Id, Opportunity>([Select Id FROM opportunity]);
        return opp;
     
    }

    //===================================================================================================================    
    //Excercise D
    //An aggregate results query that returns an integer equal to the total number of open opportunities in your org.
    //====================================================================================================================
     
    public static Integer getOppsCount(){
    
       Integer ag = [SELECT COUNT() FROM Opportunity WHERE StageName NOT IN ('Closed WON','CLOSED LOST') ];
       return ag;
    
    }


}
